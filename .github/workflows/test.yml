name: DeNSE CI

env:
  DO_PLOT: 0

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
     runs-on: ${{ matrix.os }}
     strategy:
       fail-fast: false
       matrix:
         os: [ubuntu-latest, macos-latest, windows-latest]
         include:
         - os: ubuntu-latest
           path: ~/.cache/pip
           python: python3
           pip: pip3
         - os: macos-latest
           path: ~/Library/Caches/pip
           python: python3
           pip: pip3
         - os: windows-latest
           path: ~\AppData\Local\pip\Cache
           python: python
           pip: pip
                                                 
     steps:
       - name: Checkout repo content 
         uses: actions/checkout@master
         with:
            submodules: recursive

       - name: Cache Homebrew
         if: ${{ matrix.os == 'macos-latest' }}
         uses: actions/cache@v2
         with:
           path: ~/Library/Caches/Homebrew
           key: homebrew-cache
           restore-keys: |
             homebrew-cache

       - name: Cache pip
         uses: actions/cache@v2
         with:
           path: ${{ matrix.path }}
           key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
           restore-keys: |
             ${{ matrix.os }}-pip-

       - name: Activate Conda Windows
         if: ${{ matrix.os == 'windows-latest' }}
         uses: s-weigand/setup-conda@v1

       - name: Build Ubuntu
         if: ${{ matrix.os == 'ubuntu-latest' }}
         run: |
           chmod +x extra/install_debian.sh
           cd extra
           ./install_debian.sh

       - name: Build MacOS
         if: ${{ matrix.os == 'macos-latest' }}
         run: |
           chmod +x extra/install_macos.sh
           cd extra
           ./install_macos.sh

       - name: Build Windows
         if: ${{ matrix.os == 'windows-latest' }}
         run: |
           conda install python cmake geos boost
           pip install cython
           pip install scipy numpy matplotlib pytest shapely pint PyOpenGL svg.path dxfgrabber networkx pyneuroml neurom
           pip install nngt
           cd extra
           ./install_windows.cmd

       - name: Test
         run: |
           ${{ matrix.pip }} install pytest
           ${{ matrix.python }} -m pytest tests --ignore=tests/todo
