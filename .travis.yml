language: python

dist: bionic

sudo: required

env:
  global:
  - DO_PLOT=0

matrix:
  include:
  - env: PYTHON_VERSION=3.8
    os: linux
    python: "3.6"
  - env: PYTHON_VERSION=3
    os: windows
    language: shell

cache:
    - apt
    - pip

before_install:
  # update apt and pip packages
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      echo $VIRTUAL_ENV;
      sudo rm -rf /var/lib/apt/lists/*;
      sudo apt-get update -qq;
      sudo apt-get autoremove;
      sudo apt-get install -y cmake libboost-dev libgeos++-dev g++;
      pip install setuptools cython;
      pip install numpy scipy pint pytest nngt networkx pyneuroml svg.path dxfgrabber PyOpenGL matplotlib neurom;
      pip install --no-binary shapely, shapely;
    fi
  # # update brew and pip on mac (note that mac is without nngt)
  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  #     brew install gcc@9 cmake python3 geos doxygen boost@1.72 libomp;
  #     pip3 install setuptools;
  #     pip3 install cython;
  #     pip3 install numpy scipy pint pyneuroml pytest;
  #     pip3 install --no-binary shapely, shapely;
  #     pip3 install matplotlib networkx svg.path dxfgrabber PyOpenGL neurom;
  #   fi
  # use miniconda on windows
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      choco install openssl.light;
      choco install miniconda3 --params="'/AddToPath:1'";
      export PATH="/c/tools/miniconda3:/c/tools/miniconda3/Scripts:/c/tools/miniconda3/Library/bin:/c/tools/miniconda3/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda install python cmake geos boost;
      conda --version ; python --version ; pip --version;
      pip install cython;
      pip install scipy numpy matplotlib pytest shapely pint PyOpenGL svg.path dxfgrabber networkx pyneuroml neurom;
      pip install nngt;
    fi

install:
  # on linux, install in the virtualenv
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      mkdir build && cd build;
      cmake .. -DCMAKE_INSTALL_PREFIX=$VIRTUAL_ENV;
      make && make install;
    fi
  # # on mac, set gcc as compiler
  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  #     mkdir build && cd build;
  #     CC=gcc-9 CXX=g++-9 cmake .. -Dwith-python=3;
  #     make;
  #     CC=gcc-9 CXX=g++-9 make install;
  #   fi
  # on windows, installer works fine
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      mkdir build && cd build;
      set DISTUTILS_USE_SDK 1;
      cmake .. -DCMAKE_GENERATOR_PLATFORM=x64;
      cmake --build . --config Release --target INSTALL;
    fi;

script:
  # we were in extra for WINDOWS, and in build for MAC and LINUX, so swith back to root folder
  - cd ..
  # run tests
  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  #     python3 -m pytest tests --ignore=tests/todo;
  #   else
  #     python -m pytest tests --ignore=tests/todo;
  #   fi;
  - python -m pytest tests --ignore=tests/todo;
